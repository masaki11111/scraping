#複数のＩＰアドレスを選択して利用できるプロキシサーバの作成方法
#以下は/etc/squid/squid.confの中身
#日本語でコメントしているところが変更、追加したところ

# Example rule allowing access from your local networks.
# Adapt to list your (internal) IP networks from where browsing
# should be allowed
acl localnet src 10.0.0.0/8     # RFC1918 possible internal network
acl localnet src 172.16.0.0/12  # RFC1918 possible internal network
acl localnet src 192.168.0.0/16 # RFC1918 possible internal network
acl localnet src fc00::/7       # RFC 4193 local private network range
acl localnet src fe80::/10      # RFC 4291 link-local (directly plugged) machines
acl localnet src 127.0.0.1/32（一応追加）

acl SSL_ports port 443
acl Safe_ports port 80          # http
acl Safe_ports port 21          # ftp
acl Safe_ports port 443         # https
acl Safe_ports port 70          # gopher
acl Safe_ports port 210         # wais
acl Safe_ports port 1025-65535  # unregistered ports
acl Safe_ports port 280         # http-mgmt
acl Safe_ports port 488         # gss-http
acl Safe_ports port 591         # filemaker
acl Safe_ports port 777         # multiling http
acl CONNECT method CONNECT

# Deny requests to certain unsafe ports
http_access deny !Safe_ports

# Deny CONNECT to other than secure SSL ports
http_access deny CONNECT !SSL_ports

# Only allow cachemgr access from localhost
http_access allow localhost manager
http_access deny manager

# We strongly recommend the following be uncommented to protect innocent
# web applications running on the proxy server who think the only
# one who can access services on "localhost" is a local user
#http_access deny to_localhost

#
# INSERT YOUR OWN RULE(S) HERE TO ALLOW ACCESS FROM YOUR CLIENTS
#

#プロキシサーバに繋げるパソコンのIPアドレスを許可する
acl mynetwork src xxx.xxx.xxx.xxx/32
http_access allow mynetwork

# Example rule allowing access from your local networks.
# Adapt localnet in the ACL section to list your (internal) IP networks
# from where browsing should be allowed
http_access allow localnet
http_access allow localhost

# And finally deny all other access to this proxy
#アクセスするhttpが他にある場合はこのコードより前に書く(このコードは既に書いている）
http_access deny all

# 利用するIPアドレス（ローカルIP）とポート番号を指定する
#これらのポート番号の穴をAWSのセキュリティゾーンで開けておくことも忘れない
#接続するパソコンのプロキシ設定ではローカルIPではなくグローバルIPを指定する
http_port xxx.xxx.xxx.xxA:60088
http_port xxx.xxx.xxx.xxB:60089
http_port xxx.xxx.xxx.xxC:60070

acl localip1 myip xxx.xxx.xxx.xxA/32
acl localip2 myip xxx.xxx.xxx.xxB/32
acl localip3 myip xxx.xxx.xxx.xxC/32

tcp_outgoing_address xxx.xxx.xxx.xxA localip1
tcp_outgoing_address xxx.xxx.xxx.xxB localip2
tcp_outgoing_address xxx.xxx.xxx.xxC localip3

#DNSサーバー名を書く
dns_nameservers xxx.xxx.xxx

# 非読化
visible_hostname unkown
forwarded_for off
request_header_access X-FORWARDED-FOR deny all
request_header_access Via deny all
request_header_access Cache-Control deny all

# Uncomment and adjust the following to add a disk cache directory.
#cache_dir ufs /var/spool/squid 100 16 256

# Leave coredumps in the first cache dir
coredump_dir /var/spool/squid
#
# Add any of your own refresh_pattern entries above these.
#
refresh_pattern ^ftp:           1440    20%     10080
refresh_pattern ^gopher:        1440    0%      1440
refresh_pattern -i (/cgi-bin/|\?) 0     0%      0
refresh_pattern .               0       20%     4320                                                